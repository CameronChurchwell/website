services:

  db:
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER_FILE: /run/secrets/db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    ports: !reset []

  python:
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.12
        COPY requirements.txt requirements.txt
        RUN pip install -r requirements.txt
        RUN pip install gunicorn
        RUN mkdir /server
        RUN mkdir /templates
        RUN mkdir /assets
        RUN mkdir /presentations
    ports:
      - 5050:5050
    secrets:
      - db_user
      - db_password
      - ssl_cert
      - ssl_key
    # command: "gunicorn --certfile /run/secrets/ssl_cert --keyfile /run/secrets/ssl_key -b 0.0.0.0:5050 web_app:app"
    command: "gunicorn -b 0.0.0.0:5050 web_app:app"

  node:
    environment:
      - NODE_ENV=production
    command: sh -c "npm install; npx webpack build"

  nginx:
    image: nginx:alpine
    network_mode: "host"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./SSLFiles/cert.pem:/run/secrets/ssl_cert:ro
      - ./SSLFiles/key.pem:/run/secrets/ssl_key:ro
    # secrets:
    #   - ssl_cert
    #   - ssl_key
    depends_on:
      - python

secrets:
  db_user:
    file: ./db_user.secret
  db_password:
    file: ./db_password.secret
  ssl_cert:
    file: ./SSLFiles/cert.pem
  ssl_key:
    file: ./SSLFiles/key.pem
